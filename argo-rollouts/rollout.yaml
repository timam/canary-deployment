apiVersion: v1
kind: Service
metadata:
  name: canary-service
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: alb-rollout
---
apiVersion: v1
kind: Service
metadata:
  name: stable-service
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: alb-rollout
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alb-rollout-ingress
  annotations:
    alb.ingress.kubernetes.io/security-groups: 'sg-0aa6c158c9b4a6638'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:144928010037:certificate/a82e8729-3857-43bc-9294-63381d452ffa
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
    kubernetes.io/ingress.class: aws-alb
    alb.ingress.kubernetes.io/load-balancer-name: rollouts-sample
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /color
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: subnet-0405af5ceaafdd67a, subnet-0088dc02ee475d957, subnet-025385e7e55b371a6
spec:
  rules:
    - http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: action1
                port:
                  name: use-annotation
